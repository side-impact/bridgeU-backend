spring.application.name=BridgeU

# 프로덕션 환경에서는 'prod' 프로필을 활성화, 로컬은 'local'
spring.profiles.active=${SPRING_PROFILE:prod}

# PostgreSQL 데이터베이스 연결 설정 (Railway 권장 방식)
spring.datasource.url=jdbc:postgresql://${PGHOST:localhost}:${PGPORT:5432}/${PGDATABASE:bridgeu}?sslmode=prefer
spring.datasource.username=${PGUSER:postgres}
spring.datasource.password=${PGPASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# 서버 포트 설정 (Railway에서 자동 할당된 포트 사용)
server.port=${PORT:8080}

# --- JPA ---
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- Logging ---
logging.level.root=INFO
logging.level.com.example.demo=DEBUG
logging.level.org.springframework.jdbc=DEBUG
logging.level.org.postgresql=DEBUG

# --- SQL 스크립트 초기화 ---
# 프로덕션에서는 never, 로컬에서는 always
spring.sql.init.mode=${SQL_INIT_MODE:never}
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql${INCLUDE_TEST_DATA:,classpath:testdata.sql}
spring.sql.init.continue-on-error=false
spring.sql.init.separator=;;

# --- HTTP ---
http.timeout-ms=3000

# --- Papago ---
papago.base-url=https://papago.apigw.ntruss.com
papago.nmt-path=/nmt/v1/translation
papago.timeout-ms=3000
papago.client-id=${PAPAGO_CLIENT_ID}
papago.client-secret=${PAPAGO_CLIENT_SECRET}

# --- Cache ---
cache.max-entries=50000
cache.ttl.hours.default=24
cache.ttl.days.shortText=7
cache.shortText.maxLen=64

# --- Secrets (환경변수 로드) ---
translator.hmac-secret=${TRANSLATOR_HMAC_SECRET:dev-secret-change-me}
